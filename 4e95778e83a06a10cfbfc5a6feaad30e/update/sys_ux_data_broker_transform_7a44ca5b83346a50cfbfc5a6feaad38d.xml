<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_data_broker_transform">
    <sys_ux_data_broker_transform action="INSERT_OR_UPDATE">
        <acl_failure_result/>
        <api_name>x_417611_daves_o_0.Contact Card data broker for sys_user</api_name>
        <batch_exclude>false</batch_exclude>
        <description/>
        <mutates_server_data>false</mutates_server_data>
        <name>Contact Card data broker for sys_user</name>
        <output_schema/>
        <private>false</private>
        <props>[&#13;
{&#13;
"name": "data",&#13;
"label": "data",&#13;
"description": "Transforming JSON array into array for dropdown",&#13;
"readOnly": false,&#13;
"fieldType": "json",&#13;
"valueType": "object",&#13;
"mandatory": true&#13;
}&#13;
]</props>
        <required_translations>[ {
  "message" : "Transforming JSON array into array for dropdown",
  "comment" : ""
}, {
  "message" : "data",
  "comment" : ""
} ]</required_translations>
        <schema_version>1.0.0</schema_version>
        <script><![CDATA[function transform(input) {
    var returnArray = [];
    var empty = '<empty>';
    var record = input.data; // bound to the results from the user record search data broker.
    // if empty, means no records found, or hasn't run yet so we want to just return empty info
    var myObj = {}; //create new object
    myObj.heading = {};
    myObj.heading.name = empty;
    myObj.heading.badges = [];
    myObj.subheading = {};
    myObj.subheading.titles = [];
    myObj.subheading.badges = [];
    myObj.contact = [{
        "clickable": false,
        "label": "Home Phone",
        "value": empty
    }, {
        "clickable": false,
        "label": "Mobile Phone",
        "value": empty
    }, {
        "clickable": false,
        "label": "Email",
        "value": empty
    }];
    if (record.length > 0) { //TODO: check if object is also an array?
        myObj.heading.name = record[0].name.displayValue;
        myObj.contact[0].value = record[0].home_phone.displayValue;
        myObj.contact[1].value = record[0].mobile_phone.displayValue;
        myObj.contact[2].value = record[0].email.displayValue;
    }
    return myObj;
}]]></script>
        <sys_class_name>sys_ux_data_broker_transform</sys_class_name>
        <sys_created_by>david.nendza@gmail.com</sys_created_by>
        <sys_created_on>2025-04-14 15:37:08</sys_created_on>
        <sys_id>7a44ca5b83346a50cfbfc5a6feaad38d</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Contact Card data broker for sys_user</sys_name>
        <sys_package display_value="Daves Okta Thing" source="x_417611_daves_o_0">4e95778e83a06a10cfbfc5a6feaad30e</sys_package>
        <sys_policy/>
        <sys_scope display_value="Daves Okta Thing">4e95778e83a06a10cfbfc5a6feaad30e</sys_scope>
        <sys_update_name>sys_ux_data_broker_transform_7a44ca5b83346a50cfbfc5a6feaad38d</sys_update_name>
        <sys_updated_by>david.nendza@gmail.com</sys_updated_by>
        <sys_updated_on>2025-04-23 19:27:46</sys_updated_on>
    </sys_ux_data_broker_transform>
    <sys_translated_text action="delete_multiple" query="documentkey=7a44ca5b83346a50cfbfc5a6feaad38d"/>
</record_update>
